---
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

workspace:
  path: /mirror-tv-nuxt

steps:
  - name: startSlack
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: jenkins
      icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
      template: "*start* building *{{repo.name}}* <${DRONE_BUILD_LINK}|#{{build.number}}>. Someone gave *{{build.branch}}* a little push.\n"
      username: drone
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      branch:
        - dev
        - stag
        - master
      event:
        - push

# The cache is used by lighthouseCI only
  # - name: restoreCache
  #   pull: if-not-exists
  #   image: drillster/drone-volume-cache
  #   settings:
  #     mount:
  #       - ./.yarn-cache
  #       - ./node_modules
  #     restore: true
  #   volumes:
  #     - name: 2f746d702f6361636865
  #       path: /cache
  #   when:
  #     branch:
  #       - dev
  #       - stag
  #       - master
  #     event:
  #       - push

  - name: getCIConfig
    pull: if-not-exists
    image: gcr.io/mirror-tv-275709/drone-cloud-sdk:latest
    commands:
      - rm -rf ../configs
      - rm -rf ./configs/*
      - gcloud source repos clone configs ../configs
      - cp ../configs/mirror-tv-nuxt/ci/config.js ./configs/config.js
    when:
      branch:
        - dev
      event:
        - pull_request
        - push

  - name: buildForLighthouseCI
    pull: if-not-exists
    image: node:14-slim
    commands:
      - apt-get update && apt-get install -y node-gyp
      - yarn install
      - yarn run build
    when:
      branch:
        - dev
      event:
        - pull_request
        - push

  - name: lighthouseCI
    pull: if-not-exists
    image: node:14-slim
    environment:
      LHCI_GITHUB_APP_TOKEN:
        from_secret: lhci_github_app_token
      LHCI_BUILD_CONTEXT__GIT_REMOTE:
        from_secret: lhci_build_context__git_remote
    commands:
      - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | tee -a /etc/apt/sources.list.d/google.list
      - apt-get update && apt-get install -y gnupg2
      - apt-get update && apt-get install -y wget
      - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
      - apt-get update && apt-get install -y google-chrome-stable
      - export CHROME_PATH=$(which google-chrome-stable)
      - export LHCI_BUILD_CONTEXT__EXTERNAL_BUILD_URL="$BUILD_URL"
      - apt-get update && apt-get -y install procps
      - npm install -g @lhci/cli@0.4.x
      - lhci autorun
    when:
      branch:
        - dev
      event:
        - pull_request
        - push

  - name: getDevConfig
    pull: if-not-exists
    image: gcr.io/mirror-tv-275709/drone-cloud-sdk:latest
    commands:
      - rm -rf ../configs
      - rm -rf ./configs/*
      - gcloud source repos clone configs ../configs
      - cp ../configs/mirror-tv-nuxt/tv-${DRONE_BRANCH}/config.js ./configs/config.js
      - cp ../configs/mirror-tv-nuxt/tv-${DRONE_BRANCH}/mirror-tv-gcskeyfile.json ./gcskeyfile.json
    environment:
      GOOGLE_CREDENTIALS:
        from_secret: google_credentials
    when:
      branch:
        - dev
        - stag
        - master
      event:
        - push

  - name: build&publish
    pull: if-not-exists
    image: plugins/gcr
    settings:
      repo: mirror-tv-275709/${DRONE_REPO_NAME}
      tag: ${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}
    environment:
      DOCKER_LAUNCH_DEBUG: 'true'
      GOOGLE_CREDENTIALS:
        from_secret: google_credentials
    when:
      branch:
        - dev
        - stag
        - master
      event:
        - push

  - name: deployTVDev
    pull: if-not-exists
    image: nytimes/drone-gke
    settings:
      cluster: tv-dev
      namespace: default
      vars:
        app: ${DRONE_REPO_NAME}
        image: gcr.io/mirror-tv-275709/${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER}
        tier: frontend
      verbose: true
      zone: asia-east1-c
    environment:
      TOKEN:
        from_secret: google_credentials
    when:
      branch:
        - dev
      event:
        - push

  # - name: rebuildCache
  #   pull: if-not-exists
  #   image: drillster/drone-volume-cache
  #   settings:
  #     mount:
  #       - ./.yarn-cache
  #       - ./node_modules
  #     rebuild: true
  #   volumes:
  #     - name: 2f746d702f6361636865
  #       path: /cache
  #   when:
  #     branch:
  #       - dev
  #       - stag
  #       - master

  - name: finishSlack
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: jenkins
      icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
      template: "{{#success build.status}}\n  *success* ${DRONE_REPO_NAME}:${DRONE_BRANCH}_${DRONE_COMMIT_AUTHOR}_${DRONE_BUILD_NUMBER} was well served.\n  Check out our new <https://dev.mnews.tw|mirror-tv-nuxt>.\n{{else}}\n  Houston, we have a problem. Build <${DRONE_BUILD_LINK}|#{{build.number}}> failed.\n{{/success}}\n"
      username: drone
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      branch:
        - dev
        - stag
        - master
      event:
        - push
      status:
        - success
        - failure

volumes:
  - name: 2f746d702f6361636865
    host:
      path: /tmp/cache

image_pull_secrets:
  - gcr_docker_config

