#import "~/apollo/fragments/listingArtShow.gql"

query fetchArtShowsByShowSlug(
  $first: Int = 8,
  $skip: Int = 0,
  $slug: String,
) {
  allArtShows(
    where: {
      state: published
      OR: [
        {
          show: {
            slug: $slug
          }
        },
        {
          series_some: {
            section_some: {
              show_some: {
                slug: $slug
              }
            }
          }
        },
      ]
    },
    first: $first,
    skip: $skip,
    sortBy: createdAt_DESC,
  ) {
    ...listingArtShow
  }
  _allArtShowsMeta(
    where: {
      state: published
      OR: [
        {
          show: {
            slug: $slug
          }
        },
        {
          series_some: {
            section_some: {
              show_some: {
                slug: $slug
              }
            }
          }
        },
      ]
    }
  ) {
    count
  }
}

query fetchArtShowsByAuthorSlug(
  $authorSlug: String!,
  $showSlug: String!,
  $first: Int = 8,
  $skip: Int = 0,
) {
  allArtShows(
    where: {
      state: published
      author_some: {
        slug: $authorSlug,
      },
      series_some: {
        section_some: {
          show_some: {
            slug: $showSlug,
          },
        },
      },
    },
    first: $first,
    skip: $skip,
    sortBy: createdAt_DESC,
  ) {
    ...listingArtShow
  }
  _allArtShowsMeta(
    where: {
      state: published
      author_some: {
        slug: $authorSlug,
      },
      series_some: {
        section_some: {
          show_some: {
            slug: $showSlug,
          },
        },
      },
    },
  ) {
    count
  }
}

query fetchArtShowsBySeriesSlug(
  $seriesSlug: String!,
  $first: Int = 8,
  $skip: Int = 0,
) {
  allArtShows(
    where: {
      state: published
      series_some: {
        slug: $seriesSlug,
      },
    },
    first: $first,
    skip: $skip,
  ) {
    ...listingArtShow
  }
  _allArtShowsMeta(
    where: {
      state: published
      series_some: {
        slug: $seriesSlug,
      },
    },
  ) {
    count
  }
}

query fetchArtShowBySlug(
  $slug: String!,
) {
  allArtShows(
    where: {
      state: published
      slug: $slug
    },
  ) {
    contentApiData
    ...listingArtShow
    series {
      slug
      name
      section {
        slug
        name
      }
    }
    author {
      slug
      name
      bioApiData
      showhostImg {
        urlMobileSized
        urlOriginal
      }
    }
  }
}
