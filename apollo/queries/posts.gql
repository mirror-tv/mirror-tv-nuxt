#import "~/apollo/fragments/listingPagePost.gql"

query fetchPostsAndCountByTagName (
  $tagName: String,
  $maxResults: Int = 12,
  $skip: Int = 0,
  $withCount: Boolean = false,
) {
  allPosts(
    where: {
      state: published,
      slug_not_in: [
        "privacy",
        "ad-sales",
        "press-self-regulation",
        "webauthorization",
        "biography",
        "complaint",
        "standards",
        "faq",
        "aboutus",
      ]
      tags_some: {
        name: $tagName
      }
    },
    first: $maxResults,
    skip: $skip,
    sortBy: publishTime_DESC,
  ) {
    publishTime
    ...listingPagePost
  }
  _allPostsMeta(
    where: {
      state: published,
      tags_some: {
        name: $tagName
      }
    },
  ) @include(if: $withCount) {
    count
  }
}

query fetchPostsByCategorySlug (
  $category: String,
  $first: Int = 10,
  $skip: Int = 0,
  $style: PostStyleType,
  $withCount: Boolean = false,
) {
  allPosts(
    sortBy: publishTime_DESC,
    where: {
      categories_some: {
        slug: $category
      },
      state: published,
      slug_not_in: [
        "privacy",
        "ad-sales",
        "press-self-regulation",
        "webauthorization",
        "biography",
        "complaint",
        "standards",
        "faq",
        "aboutus",
      ]
      style: $style
    },
    first: $first,
    skip: $skip
  ) {
    ...listingPagePost
  }
  _allPostsMeta(
    where: {
      categories_some: {
        slug: $category
      },
      state: published,
      style: $style
    },
  ) @include(if: $withCount) {
    count
  }
}

query fetchPostsByCategories (
  $first: Int = 8,
  $categories: [String]!
) {
  allPosts(
    sortBy: publishTime_DESC,
    where: {
      state: published,
      slug_not_in: [
        "privacy",
        "ad-sales",
        "press-self-regulation",
        "webauthorization",
        "biography",
        "complaint",
        "standards",
        "faq",
        "aboutus",
      ]
      style_not_in: [wide, projects, script, campaign, readr],
      categories_some: {
        slug_in: $categories
      }
    },
    first: $first,
  ) {
    slug
    name
  }
}

query fetchPosts(
  $first: Int = 12,
  $skip: Int = 0,
  $withCount: Boolean = false,
  $withCoverPhoto: Boolean = false,
  $filteredSlug: [String] = [""],
) {
  allPosts(
    sortBy: publishTime_DESC,
    where: {
      state: published,
      slug_not_in: $filteredSlug,
      style_not_in: [wide, projects, script, campaign, readr]
    },
    first: $first,
    skip: $skip
  ) {
    id
    publishTime
    categories {
      name
    }
    ...listingPagePost
    heroVideo @include(if: $withCoverPhoto) {
      coverPhoto {
        urlMobileSized
      }
    }
  }

  _allPostsMeta(
    where: {
      state: published,
      style_not_in: [wide, projects, script, campaign, readr]
    }
  ) @include(if: $withCount) {
    count
  }
}
